{"version":3,"sources":["background.jpg","Components/landingpage.js","Components/aboutme.js","Components/contact.js","Components/projects.js","Components/resume.js","Components/main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","LandingPage","style","width","margin","className","col","src","alt","aria-hidden","class","href","target","rel","Component","Aboutme","whiteSpace","Contact","Projects","props","state","activeTab","this","shadow","minWidth","color","height","background","border","colored","onChange","tabId","setState","ripple","toggleCategories","Resume","Main","exact","path","component","App","fixedHeader","transparent","title","textDecoration","to","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.46f3c301.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.3969ffae.jpg\";","import React, {Component} from 'react';\nimport { Grid, Cell } from 'react-mdl';\n\nclass LandingPage extends Component {\n    render() {\n        return (\n            <div style={{width:\"100%\", margin:'auto'}}>\n                <Grid className=\"landing-grid\">\n                    <Cell col={12}>\n                        <img\n                        src=\"/me_cropped.png\"\n                        alt=\"avatar\"\n                        className=\"avatar-image\"\n                        />\n\n                        <div className=\"banner-text\"> \n                        <h1>brian betancourt </h1>\n                        <hr/>\n                        \n                        {/* <div className=\"mini-icons\">\n                            <i className=\"fa fa-code\" aria-hidden=\"true\"></i>  \n                                 \n                            <i class=\"fa fa-flask\" aria-hidden=\"true\"></i>\n                        </div> */}\n\n                        <p>Software Engineering <i className=\"fa fa-code\" aria-hidden=\"true\"></i>  | Data Science  <i class=\"fa fa-flask\" aria-hidden=\"true\"></i></p> \n                        <div className=\"social-links\">\n                            {/* linkedin */}\n                            <a href=\"https://www.linkedin.com/in/bibetancourt/\" target=\"_blank\" rel =\"noopener noreferrer\" >\n                                <i className=\"fa fa-linkedin-square\" aria-hidden=\"true\" />\n                            </a>\n                            {/* github */}\n                            <a href=\"https://github.com/sulfuroussquares\" target=\"_blank\" rel =\"noopener noreferrer\" >\n                                <i className=\"fa fa-github\" aria-hidden=\"true\" />\n                            </a>\n                        </div>\n                        </div>\n                    </Cell>\n                </Grid>\n            </div>\n            \n            \n        )\n    }\n}\n\nexport default LandingPage;","import React, {Component} from 'react';\nimport { Grid, Cell } from 'react-mdl';\n\n\nclass Aboutme extends Component {\n    render() {\n        return (\n        <div className='aboutme-box' style={{width:\"100%\", margin:'auto'}}>\n            <Grid className=\"landing-grid\">\n                    <Cell col={12}></Cell>\n                    <Cell col={12}>\n                        <div className=\"banner-text\"> \n                        <h1>About Me </h1>\n                        <hr/>\n                        <p style={{whiteSpace: 'pre-wrap'}}> I am passionate about solving problems using technology. </p>  \n                        </div>\n                    </Cell>\n                </Grid>\n            </div>\n        )\n    }\n}\n\nexport default Aboutme;","import React, {Component} from 'react';\n\nclass Contact extends Component {\n    render() {\n        return (\n            <div> <h1> Contact </h1></div>\n        )\n    }\n}\n\nexport default Contact;","import React, {Component} from 'react';\nimport { Tabs, Tab , Grid, Cell, Card, CardTitle, CardActions, Button, CardMenu, CardText} from 'react-mdl';\n\nclass Projects extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { activeTab: 0};\n    }\n\n    toggleCategories(){\n\n        if(this.state.activeTab===0) {\n            return (\n\n                <div className='projects-grid'>\n                <Card shadow={5} style={{minWidth: '450', margin: 'auto'}}>\n                <CardTitle style={{color: '#fff', height: '20em', background: 'url(/logreg2.png) center / cover'}}> </CardTitle>\n                <CardText>\n                    Logistic Regression classification applied to crime data.\n                </CardText>\n                <CardActions border>\n                    <div class='center-align'>\n                    <Button colored href='https://github.com/sulfuroussquares'>GitHub</Button>\n                    </div>\n                </CardActions>\n                <CardMenu style={{color: '#fff'}}>\n                </CardMenu>\n                </Card>\n\n                </div>\n            )\n        }\n        else if(this.state.activeTab===1){\n            return(\n                <div className='projects-grid'>\n                <Card shadow={5} style={{minWidth: '450', margin: 'auto'}}>\n                <CardTitle style={{color: '#fff', height: '20em', background: 'url(/comingsoon.png) center / cover'}}> </CardTitle>\n                <CardText>\n                    Coming Soon\n                </CardText>\n                <CardActions border>\n                    <div class='center-align'>\n                    <Button colored href='https://github.com/sulfuroussquares'>GitHub</Button>\n                    </div>\n                </CardActions>\n                <CardMenu style={{color: '#fff'}}>\n                </CardMenu>\n                </Card>\n\n                </div>\n            )\n        }\n\n    }\n    \n\n    render() {\n        return (\n           <div>\n            <div className=\"category-tabs\"> \n                <Tabs activeTab={this.state.activeTab} onChange={(tabId) => this.setState({activeTab: tabId})} ripple > \n                <Tab>Data Science</Tab>\n                <Tab>Software Engineering</Tab>\n                </Tabs>\n\n                <Grid>\n                <Cell col={12}>\n                <div className=\"content\">{this.toggleCategories()}</div>\n                </Cell>\n                </Grid>\n                    \n                \n            </div>\n            </div>\n        )\n    }\n}\n\nexport default Projects;","import React, {Component} from 'react';\n\nclass Resume extends Component {\n    render() {\n        return (\n            <div> <h1> Resume </h1></div>\n        )\n    }\n}\n\nexport default Resume;","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport LandingPage from './landingpage';\nimport Aboutme from './aboutme';\nimport Contact from './contact';\nimport Projects from './projects';\nimport Resume from './resume';\n\n\nconst Main = () => (\n    <Switch>\n        <Route exact path=\"/\" component={LandingPage}/>\n        <Route path=\"/aboutme\" component={Aboutme}/>\n        <Route path=\"/contact\" component={Contact}/>\n        <Route path=\"/projects\" component={Projects}/>\n        <Route path=\"/resume\" component={Resume}/>\n    </Switch>\n        \n    \n)\n\nexport default Main;","import React, {Component} from 'react';\nimport './App.css';\n// React-MDL\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport {Layout, Header, Navigation, Drawer, Content} from 'react-mdl';\nimport Main from './Components/main';\nimport { Link } from 'react-router-dom';\nimport background from './background.jpg';\n\nclass App extends Component {\n  render() {\n    return (\n      // {/* Always shows Linkheader, even in smaller screens. */}\n      // <div style={{height: '300px', position: 'relative'}}>\n      \n      <div className =\"background\">\n      {/* <div className=\"demo-big-content\"> */}\n      <Layout fixedHeader>\n        <Header transparent className=\"header-color\" title={<span><span style={{ color: '#ddd' }}> </span><Link style={{textDecoration: 'none', color: 'white'}} to='/'><strong>Home</strong></Link></span>}>\n            <Navigation>\n                {/* <Link to=\"/resume\">Resume</Link> */}\n                <Link to=\"/aboutme\">About Me</Link>\n                <Link to=\"/projects\">Projects</Link>\n                {/* <Link to=\"/contact\">Contact</Link> */}\n            </Navigation>\n        </Header>\n        <Drawer title=\"Portfolio\">\n            <Navigation>\n                {/* <Link to=\"/resume\">Resume</Link> */}\n                <Link to=\"/aboutme\">About Me</Link>\n                <Link to=\"/projects\">Projects</Link>\n                {/* <Link to=\"/contact\">Contact</Link> */}\n            </Navigation>\n        </Drawer>\n        <Content>\n        <Main/>\n        </Content>\n      </Layout>\n      </div>\n        );\n      }\n    }\n     \n  \n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n<BrowserRouter>\n<App />\n</BrowserRouter>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}